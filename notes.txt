

The command:
git config --list
will list the settings. There you should also find user.name and user.email.
(Type q to get out)

To configure a setting:
git config --global user.name "My Name"
git config --global user.email "myemail@example.com"

To find git repositories in my local machine, just use your OS file/folder find program to find .git named folders
___________________________________________

To rename a file in the repository:
git mv filename new_filename

To delete a file:
git rm <file>

If you deleted a file locally, to delete it remotely:

commit the deletion:
git commit -a -m "A file was deleted"

And push your commit upstream:
git push origin master
___________________________________________

To push a file edit to remote:

change a file and add it to the  Git staging area: (This area contains a list of all the files you have recently changed. Your repository will be updated the next time you create a commit with your changes)
git add notes.txt

You can check which files are being tracked with"
git status

Now that git tracks the file, we can commit:
git commit -m "file changing message"

Commit simply creates a checkpoint that you can revert to at any time. Now we can push to GitHub:
git push origin master 

___________________________________________

move repository to different directory
mv C:\\Users\\Nikos\\myGitProject C:\\Users\\Nikos\\GitRepos\\FirstRepo

___________________________________________

create a new branch locally:
git checkout -b pyspark

To create this branch remotely, do:
git push --set-upstream origin pyspark

Then add a new file manually to the repository. And then do git add, commit & push like before to push your commits to this newly created branch.

To switch back to the master branch:
git checkout master

NOTE: If you now do Git status, the new file you added before doesn't show because it is not tracked in this branch. You'd need to add, commit, push to make it available on the master branch.
_________________________________________

Pull Request

using GitHub:
https://blog.reviewnb.com/github-jupyter-notebook/

or with Git Bash:
from the  master branch, run: git merge pyspark . Then git push .

If you get the error: "Updates were rejected because the tip of your current branch is behind its remote counterpart", this means you need to pull before pushing.









